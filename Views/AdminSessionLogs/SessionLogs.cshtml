@model IEnumerable<ForenSync_WebApp_New.Models.audit_trail>
@{
    ViewData["Title"] = "Session Logs";
}

<div class="container-fluid mt-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2>Session Logs</h2>
    </div>

    <!-- Search and Filter Card -->
    <div class="card mb-4">
        <div class="card-body">
            <form method="get" class="row g-3">
                <div class="col-md-5">
                    <input type="text" name="searchTerm" class="form-control"
                           placeholder="Search by user ID, action, or context..."
                           value="@ViewBag.SearchTerm" />
                </div>
                <div class="col-md-3">
                    <select name="filterAction" class="form-select">
                        <option value="">All Actions</option>
                        <option value="Login">Login</option>
                        <option value="Logout">Logout</option>
                        <option value="Create">Create</option>
                        <option value="Update">Update</option>
                        <option value="Delete">Delete</option>
                        <option value="View">View</option>
                        <option value="Export">Export</option>
                    </select>
                </div>
                <div class="col-md-2">
                    <button type="submit" class="btn btn-primary w-100">
                        <i class="bi bi-search"></i> Filter
                    </button>
                </div>
                <div class="col-md-2">
                    <a href="@Url.Action("SessionLogs")" class="btn btn-outline-secondary w-100">
                        <i class="bi bi-arrow-clockwise"></i> Clear
                    </a>
                </div>
            </form>
        </div>
    </div>

    <!-- Session Logs Table -->
    <div class="card">
        <div class="card-header">
            <h5 class="card-title mb-0">Audit Trail</h5>
        </div>
        <div class="card-body">
            @if (Model.Any())
            {
                <div class="table-responsive">
                    <table class="table table-striped table-hover">
                        <thead class="table-dark">
                            <tr>
                                <th>Event ID</th>
                                <th>User ID</th>
                                <th>Action</th>
                                <th>Created At</th>
                                <th>Context</th>
                                <th>Audit Hash</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var log in Model)
                            {
                                <tr>
                                    <td>@log.event_id</td>
                                    <td>
                                        <span class="badge bg-primary">@log.user_id</span>
                                    </td>
                                    <td>
                                        <span class="badge
                                                            @(log.action?.ToLower() == "login" ? "bg-success" :
                                                                                                    log.action?.ToLower() == "logout" ? "bg-secondary" :
                                                                                                    log.action?.ToLower() == "create" ? "bg-info" :
                                                                                                    log.action?.ToLower() == "update" ? "bg-warning" :
                                                                                                    log.action?.ToLower() == "delete" ? "bg-danger" :
                                                                                                    log.action?.ToLower() == "view" ? "bg-primary" :
                                                                                                    log.action?.ToLower() == "export" ? "bg-dark" : "bg-light text-dark")">
                                    @log.action
                                </span>
                            </td>
                            <td>@log.created_at</td>
                            <td>
                                <span class="text-truncate d-inline-block" style="max-width: 200px;" title="@log.context">
                                    @log.context
                                </span>
                            </td>
                            <td>
                                <span class="text-truncate d-inline-block" style="max-width: 120px;" title="@log.audit_hash">
                                    @log.audit_hash
                                </span>
                            </td>
                            <td>
                                <button class="btn btn-sm btn-outline-primary" title="View Details">
                                    <i class="bi bi-eye"></i> Details
                                </button>
                                <button class="btn btn-sm btn-outline-info" title="Verify Hash">
                                    <i class="bi bi-shield-check"></i> Verify
                                </button>
                            </td>
                        </tr>
                                                }
                        </tbody>
                    </table>
                </div>
            }
            else
            {
                <div class="alert alert-info text-center">
                    <i class="bi bi-info-circle"></i> No session logs found.
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Set the selected filter action
            const filterAction = '@ViewBag.FilterAction';
            if (filterAction) {
                document.querySelector('select[name="filterAction"]').value = filterAction;
            }

            // Add row hover effects
            const rows = document.querySelectorAll('tbody tr');
            rows.forEach(row => {
                row.addEventListener('click', function() {
                    rows.forEach(r => r.classList.remove('table-active'));
                    this.classList.add('table-active');
                });
            });

            // Show log count
            const logCount = @Model.Count();
            if (logCount > 0) {
                const searchInfo = document.createElement('div');
                searchInfo.className = 'text-muted mt-2';
                searchInfo.innerHTML = `<i class="bi bi-info-circle"></i> Found ${logCount} log(s)`;
                document.querySelector('.card-header').appendChild(searchInfo);
            }

            // Tooltip for truncated text
            const tooltipTriggerList = [].slice.call(document.querySelectorAll('[title]'));
            const tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl);
            });

            // Format timestamps if needed
            const timestamps = document.querySelectorAll('td:nth-child(4)');
            timestamps.forEach(td => {
                const timestamp = td.textContent.trim();
                // You can add client-side timestamp formatting here if needed
            });
        });
    </script>

    <style>
        .table th {
            font-weight: 600;
            background-color: #343a40;
            color: white;
        }

        .table-hover tbody tr:hover {
            background-color: rgba(0, 123, 255, 0.1);
            cursor: pointer;
        }

        .table-active {
            background-color: rgba(0, 123, 255, 0.2) !important;
        }

        .badge {
            font-size: 0.75em;
        }

        .text-truncate {
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }
    </style>
}