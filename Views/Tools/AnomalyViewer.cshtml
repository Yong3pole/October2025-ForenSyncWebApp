@{
    ViewData["Title"] = "Anomaly Viewer";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <h2 class="mb-4">
                <i class="bi bi-exclamation-triangle me-2"></i>@ViewData["Title"]
            </h2>

            <!-- File Selection Card -->
            <div class="card mb-4">
                <div class="card-header bg-warning text-dark">
                    <h5 class="mb-0">
                        <i class="bi bi-search me-2"></i>Select MFT CSV for Analysis
                    </h5>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-8">
                            <div class="mb-3">
                                <label for="csvFile" class="form-label">Choose MFT CSV File</label>
                                <input class="form-control" type="file" id="csvFile" accept=".csv">
                                <div class="form-text">
                                    Select a MFTECmd-generated CSV file for AI anomaly analysis
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4 d-flex align-items-end">
                            <button class="btn btn-warning w-100" id="analyzeBtn" disabled>
                                <i class="bi bi-robot me-2"></i>Analyze MFT
                            </button>
                        </div>
                    </div>

                    <!-- JSON Response Display -->
                    <div id="jsonResponse" class="mt-3" style="display: none;">
                        <div class="card">
                            <div class="card-header bg-info text-white">
                                <h6 class="mb-0">Analysis Response</h6>
                            </div>
                            <div class="card-body">
                                <pre id="responseContent" class="mb-0"></pre>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Rest of your table remains the same -->
            <div class="card">
                <div class="card-header bg-success text-white d-flex justify-content-between align-items-center">
                    <h5 class="mb-0">
                        <i class="bi bi-list-check me-2"></i>Anomaly Detection Reports
                    </h5>
                    <span class="badge bg-light text-dark">6 reports</span>
                </div>
                <div class="card-body p-0">
                    <div class="table-responsive">
                        <table class="table table-striped table-hover mb-0">
                            <thead class="table-light">
                                <tr>
                                    <th>Report ID</th>
                                    <th>Case ID</th>
                                    <th>File Name</th>
                                    <th>Date Created</th>
                                    <th>User ID</th>
                                    <th>Report Path</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                <!-- Your existing hardcoded rows remain the same -->
                                <tr>
                                    <td><span class="badge bg-primary">RPT-001</span></td>
                                    <td><span class="badge bg-secondary">CASE-2024-001</span></td>
                                    <td>memory_dump_001.img</td>
                                    <td>2024-01-15 14:30</td>
                                    <td>USER-001</td>
                                    <td>/reports/anomaly_RPT-001.pdf</td>
                                    <td>
                                        <button class="btn btn-sm btn-outline-primary">
                                            <i class="bi bi-eye"></i> View
                                        </button>
                                    </td>
                                </tr>
                                <!-- ... other rows ... -->
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const csvFileInput = document.getElementById('csvFile');
            const analyzeBtn = document.getElementById('analyzeBtn');
            const jsonResponse = document.getElementById('jsonResponse');
            const responseContent = document.getElementById('responseContent');

            // Enable analyze button when file is selected
            csvFileInput.addEventListener('change', function() {
                analyzeBtn.disabled = !this.files.length;

                if (this.files.length) {
                    const fileName = this.files[0].name;
                    analyzeBtn.innerHTML = `<i class="bi bi-robot me-2"></i>Analyze: ${fileName}`;
                } else {
                    analyzeBtn.innerHTML = `<i class="bi bi-robot me-2"></i>Analyze MFT`;
                }
            });

            // Analyze button click handler
            analyzeBtn.addEventListener('click', async function() {
                if (!csvFileInput.files.length) return;

                const file = csvFileInput.files[0];

                // Try to get full path (may be empty due to browser security)
                const fullPath = csvFileInput.value;
                console.log('Full path:', fullPath);

                // Show loading state
                analyzeBtn.disabled = true;
                analyzeBtn.innerHTML = '<span class="spinner-border spinner-border-sm me-2"></span>Analyzing...';

                try {
                    const formData = new FormData();
                    formData.append('csvFile', file);

                    const response = await fetch('@Url.Action("AnalyzeMFT", "Tools")', {
                        method: 'POST',
                        body: formData
                    });

                    const result = await response.json();

                    // ✅ ENHANCED DISPLAY - MOVED INSIDE THE CLICK HANDLER
                    if (result.ai_insights) {
                        responseContent.innerHTML = `
                            <div class="alert alert-info">
                                <h6><i class="bi bi-robot me-2"></i>AI Analysis</h6>
                                <p>${result.ai_insights}</p>
                            </div>
                            <hr>
                            <h6>Full Analysis Results:</h6>
                            <pre>${JSON.stringify(result, null, 2)}</pre>
                        `;
                    } else {
                        responseContent.textContent = JSON.stringify(result, null, 2);
                    }

                    jsonResponse.style.display = 'block';

                } catch (error) {
                    console.error('Analysis failed:', error);
                    alert('Analysis failed: ' + error.message);
                } finally {
                    // Reset button
                    analyzeBtn.disabled = false;
                    analyzeBtn.innerHTML = '<i class="bi bi-robot me-2"></i>Analyze MFT';
                }
            });

            // View button handlers (existing functionality)
            document.querySelectorAll('.btn-outline-primary').forEach(btn => {
                btn.addEventListener('click', function() {
                    const row = this.closest('tr');
                    const reportId = row.cells[0].textContent.trim();
                    const caseId = row.cells[1].textContent.trim();
                    alert(`Viewing report: ${reportId} for case: ${caseId}`);
                });
            });
        });
    </script>

    <style>
        pre {
            background: #f8f9fa;
            border: 1px solid #e9ecef;
            border-radius: 4px;
            padding: 1rem;
            font-size: 0.875rem;
            max-height: 300px;
            overflow-y: auto;
        }
    </style>
}